import cx_Oracle
import boto3


class ConnectionDetail:
    def __init__(self, dbURI, dbUser, dbPasswordParameter):
        self.dbURI = dbURI
        self.dbUser = dbUser
        self.dbPasswordParameter = dbPasswordParameter


def query_database(con_detail, sql, binds):

    con = None
    cur = None
    ret = []

    dbURI = con_detail.dbURI
    dbUser = con_detail.dbUser
    dbPasswordParameter = con_detail.dbPasswordParameter

    # Retrieve password from parameterstore.
    ssmClient = boto3.client('ssm')
    pwd = ssmClient.get_parameter(
        Name=dbPasswordParameter, WithDecryption=True)
    print('retrieved parameter from parameter store')

    try:
        # connect to oracle rds
        con = cx_Oracle.connect(
            dbUser + '/' + pwd['Parameter']['Value'] + '@' + dbURI)

        # fetch data
        cur = con.cursor()
        cur.arraysize = 10
        cur.execute(sql, binds)

        col_names = [row[0] for row in cur.description]
        print(col_names)

        done = False
        while not done:
            rows = cur.fetchmany()
            if rows == []:
                print('no more rows to fetch...')
                done = True

            for row in rows:
                row_d = {}
                index = 0
                for col in row:
                    row_d.update({col_names[index]: col})
                    index += 1
                ret.append(row_d)
            print('looping to fetch more rows...')

    finally:
        if cur is not None:
            cur.close()
        if con is not None:
            con.close()

    return ret
